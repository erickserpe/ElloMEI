name: Docker Build and Push

# ===================================
# Workflow de Build Docker
# ===================================
# Constrói e publica imagem Docker em:
# - Push para branch main (tag: latest)
# - Tags de release (tag: versão)
# ===================================

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # ===================================
  # JOB: Build e Push Docker Image
  # ===================================
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      # -----------------------------------
      # 1. Checkout do código
      # -----------------------------------
      - name: Checkout code
        uses: actions/checkout@v4
      
      # -----------------------------------
      # 2. Setup Docker Buildx
      # -----------------------------------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # -----------------------------------
      # 3. Login no GitHub Container Registry
      # -----------------------------------
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # -----------------------------------
      # 4. Extrair metadados (tags, labels)
      # -----------------------------------
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
      
      # -----------------------------------
      # 5. Build e Push da imagem
      # -----------------------------------
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
      
      # -----------------------------------
      # 6. Scan de segurança da imagem
      # -----------------------------------
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

