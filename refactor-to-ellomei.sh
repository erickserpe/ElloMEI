#!/bin/bash

# Script de refatora√ß√£o completa: SCF-MEI ‚Üí ElloMEI
# Data: 05/10/2025

echo "=========================================="
echo "üîÑ REFATORA√á√ÉO: SCF-MEI ‚Üí ElloMEI"
echo "=========================================="
echo ""

# Cores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Contador de arquivos modificados
COUNT=0

echo "üìù Iniciando refatora√ß√£o..."
echo ""

# ==========================================
# 1. RENOMEAR ESTRUTURA DE PACOTES JAVA
# ==========================================
echo "${YELLOW}1. Renomeando estrutura de pacotes Java...${NC}"

# Criar nova estrutura de diret√≥rios
mkdir -p src/main/java/br/com/ellomei
mkdir -p src/test/java/br/com/ellomei

# Mover arquivos mantendo estrutura
if [ -d "src/main/java/br/com/scfmei" ]; then
    echo "  ‚Üí Movendo src/main/java/br/com/scfmei ‚Üí src/main/java/br/com/ellomei"
    cp -r src/main/java/br/com/scfmei/* src/main/java/br/com/ellomei/
    COUNT=$((COUNT + 1))
fi

if [ -d "src/test/java/br/com/scfmei" ]; then
    echo "  ‚Üí Movendo src/test/java/br/com/scfmei ‚Üí src/test/java/br/com/ellomei"
    cp -r src/test/java/br/com/scfmei/* src/test/java/br/com/ellomei/
    COUNT=$((COUNT + 1))
fi

# ==========================================
# 2. SUBSTITUIR PACOTES EM ARQUIVOS JAVA
# ==========================================
echo ""
echo "${YELLOW}2. Substituindo declara√ß√µes de pacote em arquivos Java...${NC}"

find src/main/java/br/com/ellomei -type f -name "*.java" -exec sed -i 's/package br\.com\.scfmei/package br.com.ellomei/g' {} \;
find src/main/java/br/com/ellomei -type f -name "*.java" -exec sed -i 's/import br\.com\.scfmei/import br.com.ellomei/g' {} \;

find src/test/java/br/com/ellomei -type f -name "*.java" -exec sed -i 's/package br\.com\.scfmei/package br.com.ellomei/g' {} \; 2>/dev/null
find src/test/java/br/com/ellomei -type f -name "*.java" -exec sed -i 's/import br\.com\.scfmei/import br.com.ellomei/g' {} \; 2>/dev/null

echo "  ‚úÖ Pacotes Java atualizados"

# ==========================================
# 3. RENOMEAR CLASSE PRINCIPAL
# ==========================================
echo ""
echo "${YELLOW}3. Renomeando classe principal...${NC}"

if [ -f "src/main/java/br/com/ellomei/ScfMeiApplication.java" ]; then
    mv src/main/java/br/com/ellomei/ScfMeiApplication.java src/main/java/br/com/ellomei/ElloMeiApplication.java
    sed -i 's/class ScfMeiApplication/class ElloMeiApplication/g' src/main/java/br/com/ellomei/ElloMeiApplication.java
    sed -i 's/ScfMeiApplication/ElloMeiApplication/g' src/main/java/br/com/ellomei/ElloMeiApplication.java
    echo "  ‚úÖ ScfMeiApplication.java ‚Üí ElloMeiApplication.java"
    COUNT=$((COUNT + 1))
fi

# ==========================================
# 4. ATUALIZAR POM.XML
# ==========================================
echo ""
echo "${YELLOW}4. Atualizando pom.xml...${NC}"

sed -i 's/<groupId>br\.com\.scfmei<\/groupId>/<groupId>br.com.ellomei<\/groupId>/g' pom.xml
sed -i 's/<artifactId>SCF-MEI<\/artifactId>/<artifactId>ElloMEI<\/artifactId>/g' pom.xml
sed -i 's/<name>SCF-MEI<\/name>/<name>ElloMEI<\/name>/g' pom.xml
sed -i 's/<description>SCF-MEI<\/description>/<description>ElloMEI - Sistema de Controle Financeiro para MEI<\/description>/g' pom.xml

echo "  ‚úÖ pom.xml atualizado"
COUNT=$((COUNT + 1))

# ==========================================
# 5. ATUALIZAR DOCKER-COMPOSE.YML
# ==========================================
echo ""
echo "${YELLOW}5. Atualizando docker-compose.yml...${NC}"

sed -i 's/scf-mei-mysql/ellomei-mysql/g' docker-compose.yml
sed -i 's/scf-mei-app/ellomei-app/g' docker-compose.yml
sed -i 's/scf-mei-network/ellomei-network/g' docker-compose.yml
sed -i 's/scf-mei-monitor/ellomei-monitor/g' docker-compose.yml

echo "  ‚úÖ docker-compose.yml atualizado"
COUNT=$((COUNT + 1))

# ==========================================
# 6. ATUALIZAR .ENV
# ==========================================
echo ""
echo "${YELLOW}6. Atualizando .env...${NC}"

sed -i 's/scf_mei/ellomei/g' .env
sed -i 's/SCF_MEI/ELLOMEI/g' .env
sed -i 's/LOGGING_LEVEL_BR_COM_SCFMEI/LOGGING_LEVEL_BR_COM_ELLOMEI/g' .env

echo "  ‚úÖ .env atualizado"
COUNT=$((COUNT + 1))

# ==========================================
# 7. ATUALIZAR ARQUIVOS DE PROPERTIES
# ==========================================
echo ""
echo "${YELLOW}7. Atualizando arquivos de properties...${NC}"

find src/main/resources -name "*.properties" -exec sed -i 's/scfmei/ellomei/g' {} \;
find src/main/resources -name "*.properties" -exec sed -i 's/SCF-MEI/ElloMEI/g' {} \;
find src/main/resources -name "*.properties" -exec sed -i 's/SCF MEI/Ello MEI/g' {} \;

echo "  ‚úÖ Properties atualizados"
COUNT=$((COUNT + 1))

# ==========================================
# 8. ATUALIZAR TEMPLATES HTML
# ==========================================
echo ""
echo "${YELLOW}8. Atualizando templates HTML...${NC}"

find src/main/resources/templates -name "*.html" -exec sed -i 's/SCF-MEI/ElloMEI/g' {} \;
find src/main/resources/templates -name "*.html" -exec sed -i 's/SCF MEI/Ello MEI/g' {} \;

echo "  ‚úÖ Templates HTML atualizados"
COUNT=$((COUNT + 1))

# ==========================================
# 9. ATUALIZAR DOCUMENTA√á√ÉO
# ==========================================
echo ""
echo "${YELLOW}9. Atualizando documenta√ß√£o (.md)...${NC}"

find docs -name "*.md" -exec sed -i 's/SCF-MEI/ElloMEI/g' {} \;
find docs -name "*.md" -exec sed -i 's/SCF MEI/Ello MEI/g' {} \;
find docs -name "*.md" -exec sed -i 's/scf-mei/ellomei/g' {} \;
find docs -name "*.md" -exec sed -i 's/scf_mei/ellomei/g' {} \;
find docs -name "*.md" -exec sed -i 's/br\.com\.scfmei/br.com.ellomei/g' {} \;

sed -i 's/SCF-MEI/ElloMEI/g' README.md
sed -i 's/SCF MEI/Ello MEI/g' README.md
sed -i 's/scf-mei/ellomei/g' README.md
sed -i 's/scf_mei/ellomei/g' README.md

echo "  ‚úÖ Documenta√ß√£o atualizada"
COUNT=$((COUNT + 1))

# ==========================================
# 10. ATUALIZAR SCRIPTS
# ==========================================
echo ""
echo "${YELLOW}10. Atualizando scripts...${NC}"

find scripts -name "*.sh" -exec sed -i 's/scf-mei/ellomei/g' {} \;
find scripts -name "*.sh" -exec sed -i 's/scf_mei/ellomei/g' {} \;
find scripts -name "*.sh" -exec sed -i 's/SCF-MEI/ElloMEI/g' {} \;
find scripts -name "*.sh" -exec sed -i 's/scfmei/ellomei/g' {} \;

echo "  ‚úÖ Scripts atualizados"
COUNT=$((COUNT + 1))

# ==========================================
# 11. ATUALIZAR MONITORING
# ==========================================
echo ""
echo "${YELLOW}11. Atualizando configura√ß√µes de monitoramento...${NC}"

find monitoring -type f -exec sed -i 's/scf-mei/ellomei/g' {} \;
find monitoring -type f -exec sed -i 's/SCF-MEI/ElloMEI/g' {} \;

echo "  ‚úÖ Monitoramento atualizado"
COUNT=$((COUNT + 1))

# ==========================================
# 12. ATUALIZAR GITHUB WORKFLOWS
# ==========================================
echo ""
echo "${YELLOW}12. Atualizando GitHub workflows...${NC}"

find .github/workflows -name "*.yml" -exec sed -i 's/scf_mei/ellomei/g' {} \; 2>/dev/null
find .github/workflows -name "*.yml" -exec sed -i 's/SCF-MEI/ElloMEI/g' {} \; 2>/dev/null

echo "  ‚úÖ GitHub workflows atualizados"
COUNT=$((COUNT + 1))

# ==========================================
# 13. RENOMEAR ARQUIVO .IML
# ==========================================
echo ""
echo "${YELLOW}13. Renomeando arquivo IntelliJ...${NC}"

if [ -f "SCF-MEI.iml" ]; then
    mv SCF-MEI.iml ElloMEI.iml
    sed -i 's/SCF-MEI/ElloMEI/g' ElloMEI.iml
    echo "  ‚úÖ SCF-MEI.iml ‚Üí ElloMEI.iml"
    COUNT=$((COUNT + 1))
fi

# ==========================================
# 14. LIMPAR ESTRUTURA ANTIGA
# ==========================================
echo ""
echo "${YELLOW}14. Removendo estrutura antiga...${NC}"

if [ -d "src/main/java/br/com/scfmei" ]; then
    rm -rf src/main/java/br/com/scfmei
    echo "  ‚úÖ Removido src/main/java/br/com/scfmei"
fi

if [ -d "src/test/java/br/com/scfmei" ]; then
    rm -rf src/test/java/br/com/scfmei
    echo "  ‚úÖ Removido src/test/java/br/com/scfmei"
fi

if [ -d "target" ]; then
    rm -rf target
    echo "  ‚úÖ Removido target/ (ser√° recriado no pr√≥ximo build)"
fi

# ==========================================
# RESUMO
# ==========================================
echo ""
echo "=========================================="
echo "${GREEN}‚úÖ REFATORA√á√ÉO CONCLU√çDA!${NC}"
echo "=========================================="
echo ""
echo "üìä Estat√≠sticas:"
echo "  ‚Ä¢ Categorias atualizadas: $COUNT"
echo "  ‚Ä¢ Pacote Java: br.com.scfmei ‚Üí br.com.ellomei"
echo "  ‚Ä¢ Classe principal: ScfMeiApplication ‚Üí ElloMeiApplication"
echo "  ‚Ä¢ Nome do projeto: SCF-MEI ‚Üí ElloMEI"
echo ""
echo "üìù Pr√≥ximos passos:"
echo "  1. Revisar as mudan√ßas: git status"
echo "  2. Testar a aplica√ß√£o: ./scripts/docker-start.sh"
echo "  3. Fazer commit: git add -A && git commit -m 'refactor: Renomear projeto de SCF-MEI para ElloMEI'"
echo ""
echo "‚ö†Ô∏è  IMPORTANTE:"
echo "  ‚Ä¢ Atualize o remote do Git se necess√°rio"
echo "  ‚Ä¢ Reconfigure vari√°veis de ambiente de produ√ß√£o"
echo "  ‚Ä¢ Atualize documenta√ß√£o externa"
echo ""

