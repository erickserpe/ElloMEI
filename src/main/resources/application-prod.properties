# ===================================
# PRODUCTION SETTINGS - ElloMEI
# ===================================
# Este arquivo contém configurações específicas para o ambiente de PRODUÇÃO.
# Para ativar este perfil, defina: SPRING_PROFILES_ACTIVE=prod
#
# IMPORTANTE: Estas configurações são CRÍTICAS para segurança e performance em produção!
# ===================================

# ===================================
# JPA/HIBERNATE - Configurações de Persistência
# ===================================
# CRÍTICO: Use 'validate' em produção para evitar alterações acidentais no schema
# O Hibernate apenas validará se o schema está correto, mas NÃO fará alterações
spring.jpa.hibernate.ddl-auto=validate

# Desabilitar exibição de SQL no console (performance e segurança)
spring.jpa.show-sql=false

# Desabilitar formatação de SQL (não é necessário em produção)
spring.jpa.properties.hibernate.format_sql=false

# Habilitar estatísticas do Hibernate (opcional, para monitoramento)
# spring.jpa.properties.hibernate.generate_statistics=true

# ===================================
# FLYWAY - Migrações de Banco de Dados
# ===================================
# CRÍTICO: Habilitar Flyway em produção para controle de versão do schema
spring.flyway.enabled=true

# Criar baseline automaticamente se o banco já existir
spring.flyway.baseline-on-migrate=true

# Versão inicial do baseline
spring.flyway.baseline-version=1

# Validar migrações antes de aplicar
spring.flyway.validate-on-migrate=true

# ===================================
# LOGGING - Configurações de Log
# ===================================
# Nível de log geral: WARN (apenas avisos e erros)
logging.level.root=WARN

# Nível de log da aplicação: INFO (informações importantes)
logging.level.br.com.ellomei=INFO

# Nível de log do Hibernate: WARN (reduzir verbosidade)
logging.level.org.hibernate=WARN

# Nível de log do Spring: INFO
logging.level.org.springframework=INFO

# Nível de log do Spring Security: WARN
logging.level.org.springframework.security=WARN

# Arquivo de log (será criado automaticamente)
# IMPORTANTE: Certifique-se de que o diretório /var/log/scf-mei existe e tem permissões corretas
logging.file.name=/var/log/scf-mei/application.log

# Tamanho máximo do arquivo de log antes de rotacionar (10MB)
logging.logback.rollingpolicy.max-file-size=10MB

# Número máximo de arquivos de log a manter (30 dias)
logging.logback.rollingpolicy.max-history=30

# Tamanho total máximo de todos os arquivos de log (1GB)
logging.logback.rollingpolicy.total-size-cap=1GB

# Padrão de log (inclui timestamp, nível, thread, logger e mensagem)
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# ===================================
# ACTUATOR - Endpoints de Monitoramento
# ===================================
# CRÍTICO: Desabilitar todos os endpoints por padrão (segurança)
management.endpoints.enabled-by-default=false

# Habilitar apenas o endpoint de health
management.endpoint.health.enabled=true

# NÃO mostrar detalhes do health (segurança)
# Valores possíveis: never, when-authorized, always
management.endpoint.health.show-details=never

# Desabilitar componentes sensíveis do health check
management.endpoint.health.show-components=never

# Expor apenas o endpoint de health via web
management.endpoints.web.exposure.include=health

# Base path para os endpoints do Actuator
management.endpoints.web.base-path=/actuator

# ===================================
# COMPRESSÃO - Otimização de Performance
# ===================================
# Habilitar compressão GZIP para reduzir tamanho das respostas
server.compression.enabled=true

# Tipos MIME que serão comprimidos
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml

# Tamanho mínimo da resposta para aplicar compressão (1KB)
server.compression.min-response-size=1024

# ===================================
# SEGURANÇA - Headers HTTP
# ===================================
# Habilitar proteção contra clickjacking
server.servlet.session.cookie.http-only=true

# Habilitar proteção contra XSS
server.servlet.session.cookie.secure=true

# SameSite cookie policy (proteção contra CSRF)
server.servlet.session.cookie.same-site=strict

# ===================================
# DATASOURCE - Pool de Conexões (HikariCP)
# ===================================
# Otimizar pool de conexões para produção

# Número máximo de conexões no pool
spring.datasource.hikari.maximum-pool-size=20

# Número mínimo de conexões ociosas
spring.datasource.hikari.minimum-idle=5

# Timeout para obter uma conexão (30 segundos)
spring.datasource.hikari.connection-timeout=30000

# Tempo máximo que uma conexão pode ficar ociosa (10 minutos)
spring.datasource.hikari.idle-timeout=600000

# Tempo máximo de vida de uma conexão (30 minutos)
spring.datasource.hikari.max-lifetime=1800000

# Nome do pool (para logs)
spring.datasource.hikari.pool-name=ElloMEI-HikariCP

# Habilitar leak detection (detectar conexões não fechadas)
spring.datasource.hikari.leak-detection-threshold=60000

# ===================================
# CACHE - Configurações de Cache
# ===================================
# RECOMENDADO: Usar Redis em produção para cache distribuído
# Para habilitar Redis, descomente as linhas abaixo e configure o Redis
# spring.cache.type=redis
# spring.redis.host=${REDIS_HOST:localhost}
# spring.redis.port=${REDIS_PORT:6379}
# spring.redis.password=${REDIS_PASSWORD:}
# spring.redis.timeout=60000

# Por enquanto, usar cache em memória (simple)
spring.cache.type=simple

# ===================================
# THYMELEAF - Template Engine
# ===================================
# Habilitar cache de templates em produção (performance)
spring.thymeleaf.cache=true

# ===================================
# MULTIPART - Upload de Arquivos
# ===================================
# Manter os mesmos limites de upload
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# ===================================
# SSL/HTTPS - Configuracao de Seguranca
# ===================================
# IMPORTANTE: Em producao, SEMPRE use HTTPS!

# Habilitar SSL/HTTPS
server.ssl.enabled=${SSL_ENABLED:true}

# Porta HTTPS (padrao: 8443)
server.port=${SSL_PORT:8443}

# Caminho do keystore (certificado SSL)
# Use certificado de uma CA confiavel (Let's Encrypt, DigiCert, etc.)
server.ssl.key-store=${SSL_KEYSTORE_PATH:/app/ssl/certificate.p12}

# Senha do keystore
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD}

# Tipo do keystore
server.ssl.key-store-type=${SSL_KEYSTORE_TYPE:PKCS12}

# Alias da chave
server.ssl.key-alias=${SSL_KEY_ALIAS:ellomei}

# Protocolo SSL/TLS
server.ssl.protocol=TLS

# Apenas TLS 1.2 e 1.3 (versoes seguras)
server.ssl.enabled-protocols=TLSv1.2,TLSv1.3

# Cipher suites seguros
server.ssl.ciphers=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256

# HSTS (HTTP Strict Transport Security)
# Forca navegadores a sempre usarem HTTPS
server.ssl.hsts.enabled=true
server.ssl.hsts.max-age=31536000
server.ssl.hsts.include-subdomains=true

# ===================================
# MERCADO PAGO - Configuracao de Producao
# ===================================
# IMPORTANTE: Use credenciais de PRODUCAO (APP_USR-...)

# Access Token de producao
mercadopago.access-token=${MERCADOPAGO_ACCESS_TOKEN}

# Public Key de producao
mercadopago.public-key=${MERCADOPAGO_PUBLIC_KEY}

# Webhook Secret
mercadopago.webhook.secret=${MERCADOPAGO_WEBHOOK_SECRET}

# Base URL da aplicacao (HTTPS obrigatorio!)
app.base-url=${APP_BASE_URL:https://seudominio.com.br}

# ===================================
# SERVIDOR - Configurações do Tomcat
# ===================================
# Timeout de conexão (20 segundos)
server.tomcat.connection-timeout=20000

# Número máximo de threads de trabalho
server.tomcat.threads.max=200

# Número mínimo de threads de trabalho
server.tomcat.threads.min-spare=10

# Tamanho máximo do header HTTP (8KB)
server.tomcat.max-http-header-size=8192

# Aceitar apenas caracteres válidos na URL
server.tomcat.relaxed-query-chars=

# ===================================
# SPRING BOOT - Configurações Gerais
# ===================================
# Desabilitar banner do Spring Boot (limpar logs)
spring.main.banner-mode=off

# Desabilitar DevTools em produção
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

# ===================================
# NOTAS IMPORTANTES
# ===================================
# 
# ANTES DE USAR EM PRODUÇÃO:
# 
# 1. LOGS:
#    - Crie o diretório: sudo mkdir -p /var/log/scf-mei
#    - Dê permissões: sudo chown -R app-user:app-user /var/log/scf-mei
#
# 2. FLYWAY:
#    - Crie as migrations em: src/main/resources/db/migration/
#    - Nomeie como: V1__initial_schema.sql, V2__add_users.sql, etc.
#
# 3. SSL/HTTPS:
#    - Configure SSL no Nginx ou use Cloudflare
#    - Nunca use HTTP em produção!
#
# 4. MONITORAMENTO:
#    - Configure ferramentas de monitoramento (Prometheus, Grafana)
#    - Configure alertas para erros críticos
#
# 5. BACKUP:
#    - Configure backup automático do banco de dados
#    - Teste o restore regularmente
#
# 6. REDIS (OPCIONAL):
#    - Para múltiplas instâncias, use Redis para cache
#    - Descomente as configurações de Redis acima
#
# ===================================

