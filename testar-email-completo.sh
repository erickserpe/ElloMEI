#!/bin/bash

# Script para testar envio de email com CSRF token

echo "========================================="
echo "üß™ TESTE DE ENVIO DE EMAIL (COMPLETO)"
echo "========================================="
echo ""

# Email para teste
EMAIL="serpetabordaerickluan@gmail.com"

echo "1Ô∏è‚É£ Verificando se a aplica√ß√£o est√° rodando..."
if curl -s http://localhost:8080/login > /dev/null 2>&1; then
    echo "‚úÖ Aplica√ß√£o est√° rodando"
else
    echo "‚ùå Aplica√ß√£o n√£o est√° rodando"
    echo "Execute: ./docker-start.sh restart"
    exit 1
fi

echo ""
echo "2Ô∏è‚É£ Obtendo CSRF token..."

# Obter p√°gina de recupera√ß√£o de senha e extrair CSRF token
RESPONSE=$(curl -s -c cookies.txt http://localhost:8080/recuperar-senha)
CSRF_TOKEN=$(echo "$RESPONSE" | grep -oP 'name="_csrf" value="\K[^"]+')

if [ -z "$CSRF_TOKEN" ]; then
    echo "‚ùå N√£o foi poss√≠vel obter CSRF token"
    exit 1
fi

echo "‚úÖ CSRF token obtido: ${CSRF_TOKEN:0:20}..."

echo ""
echo "3Ô∏è‚É£ Enviando solicita√ß√£o de recupera√ß√£o de senha para: $EMAIL"

# Fazer requisi√ß√£o POST com CSRF token
HTTP_CODE=$(curl -s -b cookies.txt -c cookies.txt \
    -X POST "http://localhost:8080/recuperar-senha/solicitar" \
    -H "Content-Type: application/x-www-form-urlencoded" \
    -d "_csrf=$CSRF_TOKEN&email=$EMAIL" \
    -w "%{http_code}" \
    -o /dev/null \
    -L)

echo ""
if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "302" ]; then
    echo "‚úÖ Solicita√ß√£o enviada com sucesso! (HTTP $HTTP_CODE)"
    echo ""
    echo "4Ô∏è‚É£ Aguardando processamento do email..."
    sleep 3
    
    echo ""
    echo "5Ô∏è‚É£ Verificando logs da aplica√ß√£o..."
    echo ""
    
    # Verificar logs de email
    LOGS=$(docker compose logs app 2>&1 | grep -i "email.*$EMAIL\|recupera.*senha" | tail -10)
    
    if [ -n "$LOGS" ]; then
        echo "$LOGS"
    else
        echo "‚ö†Ô∏è  Nenhum log de email encontrado"
    fi
    
    echo ""
    echo "========================================="
    echo "üìß RESULTADO DO TESTE"
    echo "========================================="
    echo ""
    
    # Verificar se h√° mensagem de sucesso nos logs
    if docker compose logs app 2>&1 | grep -q "Email.*enviado.*$EMAIL"; then
        echo "‚úÖ EMAIL ENVIADO COM SUCESSO!"
        echo ""
        echo "Verifique a caixa de entrada de: $EMAIL"
        echo "N√£o esque√ßa de verificar a pasta de SPAM!"
    elif docker compose logs app 2>&1 | grep -q "Erro ao enviar email"; then
        echo "‚ùå ERRO AO ENVIAR EMAIL"
        echo ""
        echo "Logs de erro:"
        docker compose logs app 2>&1 | grep -A 5 "Erro ao enviar email" | tail -10
    else
        echo "‚ö†Ô∏è  STATUS DESCONHECIDO"
        echo ""
        echo "√öltimos logs da aplica√ß√£o:"
        docker compose logs app 2>&1 | tail -20
    fi
    
else
    echo "‚ùå Erro ao enviar solicita√ß√£o (HTTP $HTTP_CODE)"
    echo ""
    echo "√öltimos logs da aplica√ß√£o:"
    docker compose logs app 2>&1 | tail -20
fi

# Limpar cookies
rm -f cookies.txt

echo ""
echo "========================================="
echo "üìä CONFIGURA√á√ÉO DE EMAIL"
echo "========================================="
echo ""
echo "Configura√ß√µes atuais (.env):"
grep "MAIL_" .env | grep -v "^#"
echo ""
echo "Para verificar se o email est√° configurado corretamente:"
echo "1. Verifique se MAIL_USERNAME est√° correto"
echo "2. Verifique se MAIL_PASSWORD √© a senha de app do Google (16 caracteres)"
echo "3. Verifique se MAIL_FROM_NAME est√° configurado"
echo ""

